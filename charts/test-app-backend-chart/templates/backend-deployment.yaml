---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name  }}-backend
  labels:
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: backend
  namespace: {{ .Values.backend.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: backend
  replicas: {{ .Values.backend.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: backend
    spec:
      initContainers:
      - name: check-db-ready
        image: mongo
        securityContext:
          runAsUser: 1000
        command: ['sh', '-c',
        'until mongo mongodb://k8s-database-mongo.{{ .Values.mongo.namespace }}:{{ .Values.mongo.service.port }}  --eval "print(\"waited for connection\")";
         do sleep 5; done;']
      containers:
        - name: {{ .Release.Name  }}-backend
          image: "{{ .Values.backend.image }}:{{ .Values.backend.tag }}"
          imagePullPolicy: "{{ .Values.backend.imagePullPolicy }}"
          securityContext:
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          env:
            - name: DB_DNS
              value: "mongodb://k8s-database-mongo.{{ .Values.mongo.namespace }}:27017/jelotest"
