---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name  }}-mongo
  labels:
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: mongo
  namespace: {{ .Values.mongo.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: mongo
  replicas: {{ .Values.mongo.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: mongo
    spec:
      containers:
        - name: {{ .Release.Name  }}-mongo
          image: "{{ .Values.mongo.image }}:{{ .Values.mongo.tag }}"
          imagePullPolicy: "{{ .Values.mongo.imagePullPolicy }}"
          securityContext:
            runAsUser: 1000
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      volumes:
        - name: mongo-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        {{- else }}
          emptyDir: {}
        {{ end }}
