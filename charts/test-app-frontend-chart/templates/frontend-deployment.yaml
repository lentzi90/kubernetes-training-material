apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name  }}-frontend
  labels:
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: frontend
  namespace: {{ .Values.frontend.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.frontend.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: frontend
    spec:
      containers:
        - name: {{ .Release.Name  }}-frontend
          image: "{{ .Values.frontend.image }}:{{ .Values.frontend.tag }}"
          imagePullPolicy: "{{ .Values.frontend.imagePullPolicy }}"
          securityContext:
            runAsUser: 1001
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: BACKEND_SERVICE
              value: k8s-back-backend
              #value: sample-backend
            - name: BACKEND_NAMESPACE
              value: {{ .Values.backend.namespace }}
              #value: backend
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
